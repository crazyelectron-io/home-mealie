services:
  mealie:
    image: ghcr.io/mealie-recipes/mealie:v2.7.1 # 
    container_name: mealie
    restart: unless-stopped
    # ports:
    #     - "9925:9000" # 
    deploy:
      resources:
        limits:
          memory: 2000M # 
    volumes:
      - /mnt/data/appdata/mealie/data:/app/data/:rw
    environment:
      # Set Backend ENV Variables Here
      ALLOW_SIGNUP: "false"
      PUID: 1000
      PGID: 1000
      TZ: Europe/Amsterdam
      BASE_URL: https://${MEALIE_DOMAIN}
      # Database Settings
      DB_ENGINE: postgres
      POSTGRES_USER: ${MEALIE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${MEALIE_POSTGRES_PASSWORD}
      POSTGRES_SERVER: postgres-mealie
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${MEALIE_POSTGRES_DB}
      DEFAULT_HOUSEHOLD: "Familie Moerman"
      TOKEN_TIME: 48
      API_DOCS: "false"
      DAILY_SCHEDULE_TIME: "23:45"
      OIDC_AUTH_ENABLED: "true"
      OIDC_AUTO_REDIRECT: "true"
      OIDC_PROVIDER_NAME: "Authentik SSO"
      OIDC_CONFIGURATION_URL: https://${AUTHENTIK_DOMAIN}/application/o/mealie/.well-known/openid-configuration
      OIDC_CLIENT_ID: ${MEALIE_CLIENT_ID}
      OIDC_CLIENT_SECRET: ${MEALIE_CLIENT_SECRET}
    depends_on:
      postgres-mealie:
        condition: service_healthy
    networks:
      - frontend
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mealie.entrypoints=http"
      - "traefik.http.routers.mealie.rule=Host(`${MEALIE_DOMAIN}`)"
      - "traefik.http.middlewares.mealie-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.mealie.middlewares=mealie-https-redirect"
      - "traefik.http.routers.mealie-secure.entrypoints=https"
      - "traefik.http.routers.mealie-secure.rule=Host(`${MEALIE_DOMAIN}`)"
      - "traefik.http.routers.mealie-secure.tls=true"
      - "traefik.http.routers.mealie.service=mealie"
      - "traefik.http.services.mealie.loadbalancer.server.port=9000"
      - "traefik.docker.network=frontend"

  postgres-mealie:
    container_name: postgres-mealie
    image: postgres:16
    restart: unless-stopped
    volumes:
      - /mnt/data/appdata/mealie/pgdata:/var/lib/postgresql/data:rw
    environment:
      POSTGRES_PASSWORD: ${MEALIE_POSTGRES_PASSWORD}
      POSTGRES_USER: ${MEALIE_POSTGRES_USER}
      PGUSER: mealie
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - backend

networks:
  frontend:
    external: true
  backend:
    driver: bridge
